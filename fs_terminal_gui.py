import sys
import os
from PySide6.QtWidgets import QApplication, QWidget, QVBoxLayout, QTextEdit, QLineEdit
from PySide6.QtGui import QFont

class FileSystemTerminal(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–§–∞–π–ª–æ–≤—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª")
        self.resize(800, 500)

        # --- –ö–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞ main ---
        self.root_path = os.path.join(os.getcwd(), "main")
        os.makedirs(self.root_path, exist_ok=True)
        self.current_path = self.root_path

        # --- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å ---
        layout = QVBoxLayout(self)

        self.output = QTextEdit(self)
        self.output.setReadOnly(True)
        self.output.setFont(QFont("Consolas", 12))  # —à—Ä–∏—Ñ—Ç —á–µ—Ä–µ–∑ QFont
        layout.addWidget(self.output)

        self.entry = QLineEdit(self)
        self.entry.setFont(QFont("Consolas", 12))  # —à—Ä–∏—Ñ—Ç —á–µ—Ä–µ–∑ QFont
        layout.addWidget(self.entry)
        self.entry.returnPressed.connect(self.handle_command)
        self.entry.setFocus()  # —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞

        # –°—Ç–∞—Ä—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç
        self.print_line("üíª –§–∞–π–ª–æ–≤—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª")
        self.print_line(f"üì¶ –ö–æ—Ä–Ω–µ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {self.root_path}")
        self.show_dir_info()

    # -------------------------------------------------------
    def handle_command(self):
        command = self.entry.text().strip()
        if not command:
            return
        self.print_line(f"> {command}")
        self.entry.clear()

        parts = command.split()
        cmd = parts[0].lower()

        try:
            if cmd == "–≤—ã—Ö–æ–¥":
                QApplication.quit()
                return

            elif cmd == "–Ω–¥":
                parent = os.path.dirname(self.current_path)
                if os.path.commonpath([parent, self.root_path]) != self.root_path:
                    self.print_line("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–ª—å–∑—è –ø–æ–¥–Ω—è—Ç—å—Å—è –≤—ã—à–µ 'main'.")
                elif parent == self.current_path:
                    self.print_line("‚ùå –í—ã —É–∂–µ –≤ –∫–æ—Ä–Ω–µ –¥–µ—Ä–µ–≤–∞.")
                else:
                    self.current_path = parent
                    self.show_dir_info()

            elif cmd == "–≤–¥":
                if len(parts) < 2:
                    self.print_line("‚ùå –£–∫–∞–∂–∏—Ç–µ –∏–º—è –ø–∞–ø–∫–∏.")
                    return
                target = os.path.join(self.current_path, parts[1])
                if os.path.isdir(target):
                    self.current_path = target
                    self.show_dir_info()
                else:
                    self.print_line("‚ùå –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

            elif cmd == "–∏–º—è":
                if len(parts) < 3:
                    self.print_line("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –∏–º—è <—Å—Ç–∞—Ä–æ–µ> <–Ω–æ–≤–æ–µ>")
                    return
                old_name = os.path.join(self.current_path, parts[1])
                new_name = os.path.join(self.current_path, parts[2])
                if not os.path.exists(old_name):
                    self.print_line("‚ùå –§–∞–π–ª –∏–ª–∏ –ø–∞–ø–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
                    return
                os.rename(old_name, new_name)
                self.print_line(f"‚úÖ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–æ: {parts[1]} ‚Üí {parts[2]}")

            elif cmd == "–∏–Ω—Ñ–æ":
                self.show_dir_info()

            else:
                self.print_line("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
                self.print_line("  –ù–¥ ‚Äî –ø–æ–¥–Ω—è—Ç—å—Å—è –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤–≤–µ—Ä—Ö")
                self.print_line("  –í–¥ <–ø–∞–ø–∫–∞> ‚Äî –ø–µ—Ä–µ–π—Ç–∏ –≤ –ø–æ–¥–ø–∞–ø–∫—É")
                self.print_line("  –∏–º—è <—Å—Ç–∞—Ä–æ–µ> <–Ω–æ–≤–æ–µ> ‚Äî –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —Ñ–∞–π–ª/–ø–∞–ø–∫—É")
                self.print_line("  –ò–Ω—Ñ–æ ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–∏")
                self.print_line("  –≤—ã—Ö–æ–¥ ‚Äî –∑–∞–∫—Ä—ã—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É")

        except Exception as e:
            self.print_line(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

    # -------------------------------------------------------
    def show_dir_info(self):
        rel = os.path.relpath(self.current_path, start=self.root_path)
        if rel == ".":
            rel = "main"
        self.print_line(f"\nüìÇ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {rel}")

        entries = os.listdir(self.current_path)
        if not entries:
            self.print_line(" (–ø–∞–ø–∫–∞ –ø—É—Å—Ç–∞)")
            return

        dirs = [e for e in entries if os.path.isdir(os.path.join(self.current_path, e))]
        files = [e for e in entries if os.path.isfile(os.path.join(self.current_path, e))]

        self.print_line("–ü–∞–ø–∫–∏:")
        for d in dirs:
            self.print_line(f"  [–ü–ê–ü–ö–ê] {d}")

        self.print_line("\n–§–∞–π–ª—ã:")
        for f in files:
            ext = os.path.splitext(f)[1] or "(–±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è)"
            self.print_line(f"  {f} ‚Äî {ext}")

    # -------------------------------------------------------
    def print_line(self, text):
        self.output.append(text)
        self.output.verticalScrollBar().setValue(self.output.verticalScrollBar().maximum())


# -------------------------------------------------------
if __name__ == "__main__":
    app = QApplication(sys.argv)
    terminal = FileSystemTerminal()
    terminal.show()
    sys.exit(app.exec())
